import{a as E,i as $,S as q}from"./assets/vendor-Qob_5Ba8.js";(function(){const s=document.createElement("link").relList;if(s&&s.supports&&s.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))a(e);new MutationObserver(e=>{for(const o of e)if(o.type==="childList")for(const l of o.addedNodes)l.tagName==="LINK"&&l.rel==="modulepreload"&&a(l)}).observe(document,{childList:!0,subtree:!0});function r(e){const o={};return e.integrity&&(o.integrity=e.integrity),e.referrerPolicy&&(o.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?o.credentials="include":e.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function a(e){if(e.ep)return;e.ep=!0;const o=r(e);fetch(e.href,o)}})();const S="46991464-598feb9117dc71abe61f88b6f",x="https://pixabay.com/api/",H=15;async function h(t,s=1){const r=`${x}?key=${S}&q=${encodeURIComponent(t)}&image_type=photo&orientation=horizontal&safesearch=true&per_page=${H}&page=${s}`,a=await E.get(r);if(a.status!==200)throw new Error("Failed to fetch images");return{images:a.data.hits.map(({webformatURL:e,largeImageURL:o,tags:l,likes:b,comments:w,views:L,downloads:v})=>({webformatURL:e,largeImageURL:o,tags:l,likes:b,comments:w,views:L,downloads:v})),totalHits:a.data.totalHits}}function g(t,s=!1){const r=document.querySelector(".image-gallery"),a=t.map(e=>`
        <div class="image-item">
            <a href="${e.largeImageURL}">
                <img src="${e.webformatURL}" alt="${e.tags}" loading="lazy" />
            </a>
            <div class="image-info">
                <h5 class ="text"> <span class="icon-data">💗 Likes: ${e.likes} </span></h5>
                <h5 class ="text"> <span class="icon-data">🗨️ Comments: ${e.comments}</span></h5>
                <h5 class ="text"><span class="icon-data">👀 Views: ${e.views}</span></h5>
                <h5 class ="text"><span class="icon-data">⬇️ Downloads: ${e.downloads}</span></h5>

            </div>
        </div>
    `).join("");s?r.insertAdjacentHTML("beforeend",a):r.innerHTML=a}function c(t){$.show({title:"Error",message:t,position:"bottomCenter",color:"red"})}const f=document.querySelector(".search-form"),y=document.querySelector(".image-gallery"),d=document.querySelector(".loader"),n=document.createElement("button");n.classList.add("load-more");n.textContent="Load more";y.insertAdjacentElement("afterend",n);n.style.display="none";let p,u="",i=1,m=0;f.addEventListener("submit",async t=>{var s;if(t.preventDefault(),u=(s=f.querySelector(".search-form-input"))==null?void 0:s.value.trim(),!u){c("Please enter a valid search query");return}i=1,n.style.display="none",y.innerHTML="",d.style.display="block";try{const{images:r,totalHits:a}=await h(u,i);if(m=a,r.length===0){c("No images found for your search query"),d.style.display="none";return}g(r),p=new q(".image-gallery a",{captions:!0,captionsData:"alt",captionPosition:"bottom",captionDelay:250}),p.refresh(),f.querySelector(".search-form-input").value="",m>i*15&&(n.style.display="block")}catch(r){c(r.message)}finally{d.style.display="none"}});n.addEventListener("click",async()=>{i+=1,d.style.display="block";try{const{images:t}=await h(u,i);g(t,!0),p.refresh(),i*15>=m?(n.style.display="none",c("No more results could be found")):P()}catch(t){c(t.message)}finally{d.style.display="none"}});function P(){const{height:t}=y.firstElementChild.getBoundingClientRect(),s=t*2;window.scrollTo({top:window.scrollY+s,behavior:"smooth"})}
//# sourceMappingURL=index.js.map
